library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 < -strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
difftime(Sys.time(), t1, units = "days")
difftime(Sys.time(), t1, units = "minutes")
difftime(Sys.time(), t1, units = "mins")
bye()
ls()
rm(ls(globalenv()))
?globalenv
swirl()
rm(list = ls())
runif(1)
runif(5)
runif(1:4)
?apply
?rowSums
?runif
?rnorm
?gl
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
c <- gl(4, 10)
c
tapply(x, f, mean)
tapply(x, c, mean)
split
split(x, f)
rm(list = ls())
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[ , 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
dim(flags)
head(flags)
play()
str(flags)
summary(flags)
?summary
?matrix
test <- matrix(1, 2, 3, 4, 5, 6, 7, 8, nrow = 2, ncol = 4)
test <- matrix(data = "1, 2, 3, 4, 5, 6, 7, 8", nrow = 2, ncol = 4)
test
v1 <- c(1, 2, 3, 4)
v2 <- c(5, 6, 7, 8)
?merge
test <- merge(v1, v2)
test
v1
v2
test <- merge(v1, v2, by = row)
test <- merge(v1, v2, by = 1)
test
test <- matrix(c(v1, v2), nrow = 2)
test
my_colsums <- colSums(test)
my_colsums
colMeans(test)
rowSums(test)
rowMeans(test)
nxt()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flag$landmass)
?table
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
head(flags)
summary(flags)
head(flags)
tapply(flags$population, flags$red, mean)
tapply(flags$red, flags$population, mean)
pop_red <- c(flags$name, tapply(flags$red, flags$population, mean))
pop_red
pop_red <- data.frame(flags$name, tapply(flags$red, flags$population, mean))
pop_red <- tapply(flags$red, flags$population, mean)
class(pop_red)
x <- matrix(flags$name, pop_red)
class(flags$red)
class(flags$name)
n <- vector(flags$name)
n <- array(flags$name)
n
x <- matrix(n, pop_red)
x <- n + pop_red
x <- c(n, pop_red)
x
?matrix
x <- cbind(n, pop_red)
x
rm(list = ls())
library(datasets)
data("iris")
?data
head(data)
head(iris)
summary(iris)
str(iris)
iris
head(iris)
iris$Species
lapply(iris$Sepal.Length, mean)
sapply(iris$Petal.Length, mean)
?sapply
sapply(iris$Petal.Length, iris$Species = virginica, mean)
sapply(iris$Petal.Length, iris$Species = "virginica", mean)
tapply(iris$Petal.Length, mean)
?tapply
head(iris)
colnames(iris)
f <- colnames(iris)
tapply(iris$Petal.Length, f, mean)
tapply(iris$Petal.Length, f = virginica, mean)
split(iris, f)
tapply(iris, f, mean)
f
rowmeans(iris)
rowMeans(iris)
rowMeans(iris$Sepal.Length)
iris$Sepal.Length
head(iris)
apply(iris[, 1:4], 2, mean)
?apply
apply(iris[, 1:4], 1, mean)
sapply(iris$Sepal.Length == virginica, mean)
sapply(iris$Species == virginica, mean)
sapply(iris$Species == "virginica", mean)
s <- sapply(iris$Species == "virginica", mean)
tapply(iris$Sepal.Length, s, mean)
tapply(s, iris$Sepal.Length, mean)
?subset
x <- subset(iris, iris$Species = "virginica")
x <- subset(iris, iris$species = "virginica")
x <- subset(iris, iris$Species == "virginica")
x
mean(x$Sepal.Length)
apply(subset(iris, iris$Species == "virginica"), mean)
sapply(subset(iris, iris$Species == "virginica"), mean)
?sapply
tapply(subset(iris, iris$Species == "virginica"), mean)
library(datasets)
data("mtcars")
?mtcars
head(mtcars)
?mtcars
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
?with
tapply(mpg, cyl, mean)
mtcars
mtcars
with(mtcars, tapply(mpg, cyl, mean))
?mean
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
hp
hp$8 - hp$4
hp[2,3]
hp[1]
hp[3] - hp[1]
?round
round(hp[3] - hp[1], digits = 0)
debug(ls)
ls()
exit
?debug
Q
dfs
tapply
q
h
ls()
q
ls()
ls()
Q
df
ls()
undebug()
undebug(ls)
library(datasets)
data("iris")
head(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
round(tapply(iris$Sepal.Length, iris$Species, mean), digits = 0)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
mtcars
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
round(hp[3] - hp[1], digits = 0)
?numeric
source('~/DataScience/Course02/Assignment02/cashemean.R')
rm(list = ls())
source('~/DataScience/Course02/Assignment02/cashemean.R')
?num
a <- seq(1,9)
a
a <- matrix(seq(1, 9), nrow = 3)
a
?inverse
v <- seq(1,9)
rm(list = ls())
source('~/DataScience/Course02/Assignment02/cashemean.R')
source('~/DataScience/Course02/Assignment02/cashemean.R')
source('~/DataScience/Course02/Assignment02/cashemean.R')
v <- seq(1, 9)
m <- matrix(v, nrow = 3, ncol = 3)
v
m
rm(list = ls())
my_v <- seq(1, 9)
my_m <- matrix(my_v, nrow = 3, ncol = 3)
my_v
my_m
source('~/DataScience/Course02/Assignment02/cashemean.R')
makeVector(my_v)
makeVector()
source('~/DataScience/Course02/Assignment02/cashemean.R')
cachemean(my_v)
cachemean()
my_v <- array(seq(1, 9))
cachemean(my_v)
my_v <- list(seq(1, 9))
my_v
cachemean(my_v)
makeVector(my_v)
cachemean(my_v)
cachemean(makeVector())
cachemean(makeVector(my_v))
my_v <- seq(1, 9)
cachemean(makeVector(my_v))
mean(my_v)
my_v
diag(3)
my_id <- diag(3)
solve(my_v)
solve(my_m)
my_m
?runif
my_v <- matrix(runif(9, 10,100)
)
my_v
my_v <- matrix(runif(3:#, 10,100))
3
my_v <- matrix(runif(3:3, 10,100))
my_v <- matrix(runif(3:3, 10,100))
my_v
my_v <- matrix(runif(9, 10,100), nrow = 3)
my_v
?sample
my_v <- matrix(sample(10:100, 9), nrow = 3)
my_v
solve(my_v)
solve(my_v)
my_s <- solve(my_v)
my_s
my_v * my_s
my_m <- my_v
my_m
solve(my_m)
my_m * my_s
round(my_m * my_s, digits = 0)
round(my_m %*% my_s, digits = 0)
rm(my_v)
my_id <- my_m %*% my_s
my_id
my_id <- round(my_m %*% my_s, digits = 0)
my_id
my_v
my_m
my_s
my_id
my_inv <- my_s
my_inv
rm(my_s)
my_inv
my_id <- round(my_m %*% my_inv, digits = 0)
my_id
source('~/DataScience/Course02/Assignment02/cashemean.R')
makeVector(2)
c <- makeVector(2)
c
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
makeCacheMatrix()
cacheSolve(makeCacheMatrix(my_m))
test <- cacheSolve(makeCacheMatrix(my_m))
cacheSolve(makeCacheMatrix(my_m))
cacheSolve(makeCacheMatrix(my_m))
round(my_m * test, digits = 0)
round(my_m %*% test, digits = 0)
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
cacheSolve(makeCacheMatrix(my_m))
cacheSolve(makeCacheMatrix(my_m))
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
cacheSolve(makeCacheMatrix(my_m))
cacheSolve(makeCacheMatrix(my_m))
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
cacheSolve(makeCacheMatrix(my_m))
cacheSolve(makeCacheMatrix(my_m))
my_v <- seq(1, 9)
cachemean(makeVector(my_v))
cachemean(makeVector(my_v))
cmtest <- cachemean(makeVector(my_v))
cmtest
cmtest
m
a <- makeVector(1:100)
b <- makeVector(1:100)
c
rm(c)
rm(cmtest)
a
b
cachemean(a)
cachemean(a)
cachemean(a)
cachemean(b)
cachemean(b)
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
x <- makeCacheMatrix(my_m)
cacheSolve(x)
cacheSolve(x)
round(cacheSolve(x) * my_inv, digits = 0)
round(cacheSolve(x) %*% my_inv, digits = 0)
my_id
my_m
my_inv
f_inv <- cacheSolve(x)
round(my_m %*% my_inv, digits = 0)
round(my_m %*% f_inv, digits = 0)
cacheSolve(x) %*% my_inv
m1 <- my_v <- matrix(sample(10:100, 25), nrow = 5)
m2 <- my_v <- matrix(sample(10:100, 81), nrow = 9)
m1
m2
id_m1 <- diag(5)
id_m2 <- diag(9)
inv_m1 <- solve(m1)
inv_m2 <- solve(m2)
id_m1
id_m2
id_m1 <- m1 %*% inv_m1
id_m2 <- m2 %*% inv_m1
id_m2 <- m2 %*% inv_m2
id_m1
id_m1 <- round(m1 %*% inv_m1, digits = 0)
id_m2 <- round(m2 %*% inv_m2, digits = 0)
id_m1
id_m2
rm(f_inv)
rm(my_id)
rm(my_m)
rm(test)
rm(my_V)
rm(my_v)
rm(my_inv)
x <- makeCacheMatrix(m1)
y <- makeCacheMatrix(m2)
cacheSolve(x)
x
cacheSolve(x)
f_x <- cacheSolve(x)
round(f_x * m1, digits = 0)
round(f_x %*% m1, digits = 0)
i
source('~/DataScience/Course02/Assignment02/cashmatrix_working.R')
x <- makeCacheMatrix(m1)
y <- makeCacheMatrix(m2)
cacheSolve(x)
cacheSolve(x)
cacheSolve(y)
cacheSolve(y)
download.packages("sqldf")
download.packages(sqldf)
source('~/DataScience/Course04/ExploratoryDataAnalysis_Assignment1/plot1.R')
getwd()
setwd("DataScience/Course04/ExploratoryDataAnalysis_Assignment1")
getwd()
source('~/DataScience/Course04/ExploratoryDataAnalysis_Assignment1/plot1.R')
